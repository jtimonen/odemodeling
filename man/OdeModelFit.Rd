% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/classes-fit.R
\name{OdeModelFit}
\alias{OdeModelFit}
\title{An ODE model fit (R6 class)}
\description{
The fields \code{cmdstanr_time}, \code{cmdstanr_summary},
and \code{cmdstanr_draws} store the output of \code{cmdstanr_fit}'s
methods \verb{$time()}, \verb{$summary()}, and \verb{$draws()} methods, respectively,
in memory in case \code{cmdstanr_fit} gets corrupted (for example
if the CSV files that it reads the data from are destroyed).
}
\seealso{
Other Model fit classes.: 
\code{\link{OdeModelGQ}},
\code{\link{OdeModelMCMC}}
}
\concept{Model fit classes.}
\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{model}}{An object of class \link{OdeModel}.}

\item{\code{t0}}{Used initial time.}

\item{\code{t}}{Used time points.}

\item{\code{solver}}{Used solver.}

\item{\code{data}}{Given additional data.}

\item{\code{cmdstanr_fit}}{A \link[cmdstanr:CmdStanMCMC]{cmdstanr::CmdStanMCMC} or \link[cmdstanr:CmdStanGQ]{cmdstanr::CmdStanGQ}
object.}

\item{\code{cmdstanr_time}}{A list containing output of the  \verb{$time()} method
of \code{cmdstanr_fit}.}

\item{\code{cmdstanr_summary}}{A tibble containing output of the \verb{$summary()}
method of \code{cmdstanr_fit}.}

\item{\code{cmdstanr_draws}}{A \link[posterior:draws_array]{posterior::draws_array} object containing the
output of the \verb{$draws()} method of \code{cmdstanr_fit}.}

\item{\code{cmdstanr_metadata}}{A list containing output of the \verb{$metadata()}
method of \code{cmdstanr_fit}.}

\item{\code{cmdstanr_output}}{A list containing output of the \verb{$output()}
method of \code{cmdstanr_fit}.}

\item{\code{setup_time}}{Time it took to call \verb{$initialize()} when the
\link{OdeModelFit} object was created (in seconds).}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-new}{\code{OdeModelFit$new()}}
\item \href{#method-time}{\code{OdeModelFit$time()}}
\item \href{#method-info}{\code{OdeModelFit$info()}}
\item \href{#method-draws}{\code{OdeModelFit$draws()}}
\item \href{#method-summary}{\code{OdeModelFit$summary()}}
\item \href{#method-niterations}{\code{OdeModelFit$niterations()}}
\item \href{#method-nchains}{\code{OdeModelFit$nchains()}}
\item \href{#method-ndraws}{\code{OdeModelFit$ndraws()}}
\item \href{#method-draws_size}{\code{OdeModelFit$draws_size()}}
\item \href{#method-cmdstan_seed}{\code{OdeModelFit$cmdstan_seed()}}
\item \href{#method-cmdstan_version}{\code{OdeModelFit$cmdstan_version()}}
\item \href{#method-get_t}{\code{OdeModelFit$get_t()}}
\item \href{#method-get_t0}{\code{OdeModelFit$get_t0()}}
\item \href{#method-dim}{\code{OdeModelFit$dim()}}
\item \href{#method-dim_odesol}{\code{OdeModelFit$dim_odesol()}}
\item \href{#method-extract_unflattened}{\code{OdeModelFit$extract_unflattened()}}
\item \href{#method-extract_odesol}{\code{OdeModelFit$extract_odesol()}}
\item \href{#method-loglik}{\code{OdeModelFit$loglik()}}
\item \href{#method-extract_odesol_df}{\code{OdeModelFit$extract_odesol_df()}}
\item \href{#method-plot_odesol}{\code{OdeModelFit$plot_odesol()}}
\item \href{#method-clone}{\code{OdeModelFit$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-new"></a>}}
\if{latex}{\out{\hypertarget{method-new}{}}}
\subsection{Method \code{new()}}{
Create an \link{OdeModelFit} object.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{OdeModelFit$new(model, t0, t, solver, data, cmdstanr_fit)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{model}}{An object of class \link{OdeModel} (will be deepcopied).}

\item{\code{t0}}{Used initial time.}

\item{\code{t}}{Used time points.}

\item{\code{solver}}{Used solver. An object of class \link{OdeSolver}.}

\item{\code{data}}{Given additional data.}

\item{\code{cmdstanr_fit}}{A \link[cmdstanr:CmdStanMCMC]{cmdstanr::CmdStanMCMC} or \link[cmdstanr:CmdStanGQ]{cmdstanr::CmdStanGQ}
object (will be deepcopied).}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-time"></a>}}
\if{latex}{\out{\hypertarget{method-time}{}}}
\subsection{Method \code{time()}}{
Get time information.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{OdeModelFit$time()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
A list.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-info"></a>}}
\if{latex}{\out{\hypertarget{method-info}{}}}
\subsection{Method \code{info()}}{
Get various information.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{OdeModelFit$info()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
A string.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-draws"></a>}}
\if{latex}{\out{\hypertarget{method-draws}{}}}
\subsection{Method \code{draws()}}{
Get draws (parameters and generated quantities).
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{OdeModelFit$draws(variable = NULL, iteration = NULL)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{variable}}{Name of variable.}

\item{\code{iteration}}{Index of iteration.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A \link[posterior:draws_array]{posterior::draws_array} object.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-summary"></a>}}
\if{latex}{\out{\hypertarget{method-summary}{}}}
\subsection{Method \code{summary()}}{
Get summary
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{OdeModelFit$summary()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
A \code{tibble}.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-niterations"></a>}}
\if{latex}{\out{\hypertarget{method-niterations}{}}}
\subsection{Method \code{niterations()}}{
Get number of post-warmup iterations per MCMC chain.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{OdeModelFit$niterations()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-nchains"></a>}}
\if{latex}{\out{\hypertarget{method-nchains}{}}}
\subsection{Method \code{nchains()}}{
Get number of MCMC chains.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{OdeModelFit$nchains()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ndraws"></a>}}
\if{latex}{\out{\hypertarget{method-ndraws}{}}}
\subsection{Method \code{ndraws()}}{
Get total number of post-warmup draws.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{OdeModelFit$ndraws()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-draws_size"></a>}}
\if{latex}{\out{\hypertarget{method-draws_size}{}}}
\subsection{Method \code{draws_size()}}{
Get size of the draws object in Mb.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{OdeModelFit$draws_size()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
A string.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-cmdstan_seed"></a>}}
\if{latex}{\out{\hypertarget{method-cmdstan_seed}{}}}
\subsection{Method \code{cmdstan_seed()}}{
Get used 'CmdStan' rng seed.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{OdeModelFit$cmdstan_seed()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-cmdstan_version"></a>}}
\if{latex}{\out{\hypertarget{method-cmdstan_version}{}}}
\subsection{Method \code{cmdstan_version()}}{
Get used 'CmdStan' version.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{OdeModelFit$cmdstan_version()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
A string.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-get_t"></a>}}
\if{latex}{\out{\hypertarget{method-get_t}{}}}
\subsection{Method \code{get_t()}}{
Get timepoints where the model was fitted.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{OdeModelFit$get_t()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
A numeric vector.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-get_t0"></a>}}
\if{latex}{\out{\hypertarget{method-get_t0}{}}}
\subsection{Method \code{get_t0()}}{
Get used initial time point t0.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{OdeModelFit$get_t0()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
A numeric value.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-dim"></a>}}
\if{latex}{\out{\hypertarget{method-dim}{}}}
\subsection{Method \code{dim()}}{
Get dimensions of a variable.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{OdeModelFit$dim(variable)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{variable}}{Name of variable.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A numeric vector, which is the 'Stan' variable dimension,
obtained as \code{metadata$stan_variable_dims[[variable]]}, where
\code{metadata} is the metadata of the \link[cmdstanr:CmdStanMCMC]{cmdstanr::CmdStanMCMC} or
\link[cmdstanr:CmdStanGQ]{cmdstanr::CmdStanGQ} object.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-dim_odesol"></a>}}
\if{latex}{\out{\hypertarget{method-dim_odesol}{}}}
\subsection{Method \code{dim_odesol()}}{
Extract the dimensions of the ODE solution variable.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{OdeModelFit$dim_odesol()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
A numeric vector of length 2, where first element is the
number of time points and second element is the ODE system dimension.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-extract_unflattened"></a>}}
\if{latex}{\out{\hypertarget{method-extract_unflattened}{}}}
\subsection{Method \code{extract_unflattened()}}{
Extract array variable draws so that the array is unflattened.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{OdeModelFit$extract_unflattened(variable)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{variable}}{Name of variable.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A base \R array of dimension \code{c(num_draws, ...)} where \code{num_draws}
is the total number of draws and \code{...} is the 'Stan' variable dimension,
obtained as \code{self$dim(variable)}.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-extract_odesol"></a>}}
\if{latex}{\out{\hypertarget{method-extract_odesol}{}}}
\subsection{Method \code{extract_odesol()}}{
Extract the ODE solutions using each parameter draw, in an
unflattened base \R array format.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{OdeModelFit$extract_odesol()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
A base \R array of dimension \code{c(num_draws, N, D)} where
\code{num_draws} is the total number of draws and \code{N} is the number of
time points and \code{D} is the number of ODE system dimensions.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-loglik"></a>}}
\if{latex}{\out{\hypertarget{method-loglik}{}}}
\subsection{Method \code{loglik()}}{
Extract the log likelihood using each parameter draw.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{OdeModelFit$loglik()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
A \link[posterior:draws_array]{posterior::draws_array}.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-extract_odesol_df"></a>}}
\if{latex}{\out{\hypertarget{method-extract_odesol_df}{}}}
\subsection{Method \code{extract_odesol_df()}}{
Extract the ODE solutions using each parameter draw, in a
flattened data frame format that is easy to pass as data
to for example \code{\link[ggplot2:ggplot]{ggplot2::ggplot()}}.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{OdeModelFit$extract_odesol_df(draw_inds = NULL)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{draw_inds}}{If this is not \code{NULL}, returns ode solutions
corresponding only to given draws.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A \code{data.frame}.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-plot_odesol"></a>}}
\if{latex}{\out{\hypertarget{method-plot_odesol}{}}}
\subsection{Method \code{plot_odesol()}}{
A quick way to plot the ODE solutions.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{OdeModelFit$plot_odesol(
  draw_inds = NULL,
  linealpha = 0.75,
  linecolor = "firebrick"
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{draw_inds}}{If this numeric and positive, plots ODE solutions
corresponding only to given draws. If this is \code{0}, all draws are plotted.
If this is \code{NULL}, a random subset of at most 100 draws are plotted.}

\item{\code{linealpha}}{line alpha}

\item{\code{linecolor}}{line color}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A \code{ggplot} object.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-clone"></a>}}
\if{latex}{\out{\hypertarget{method-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{OdeModelFit$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
