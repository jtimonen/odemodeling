% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/classes-fit.R
\name{OdeModelMCMC}
\alias{OdeModelMCMC}
\title{An ODE model MCMC fit (R6 class)}
\description{
Used for holding the output of the \verb{$sample()} method  of the
\link{OdeModel} class. Users are not meant to instantiate
objects of this class directly.
}
\references{
\enumerate{
\item Timonen, J. et al. (2022).
\emph{An importance sampling approach for reliable and efficient
inference in Bayesian ordinary differential equation models}.
\href{https://arxiv.org/abs/2205.09059}{arXiv}.
}
}
\seealso{
For more useful methods, see the methods inherited from
\link{OdeModelFit}.

Other model fit classes: 
\code{\link{OdeModelFit}},
\code{\link{OdeModelGQ}}
}
\concept{model fit classes}
\section{Super class}{
\code{\link[odemodeling:OdeModelFit]{odemodeling::OdeModelFit}} -> \code{OdeModelMCMC}
}
\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{cmdstan_diagnostics}}{Output of the \code{diagnose} program of 'CmdStan'.}

\item{\code{cmdstan_summary}}{Output of the \code{stansummary} program of 'CmdStan'.}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-OdeModelMCMC-print_diagnostics}{\code{OdeModelMCMC$print_diagnostics()}}
\item \href{#method-OdeModelMCMC-print_summary}{\code{OdeModelMCMC$print_summary()}}
\item \href{#method-OdeModelMCMC-new}{\code{OdeModelMCMC$new()}}
\item \href{#method-OdeModelMCMC-print}{\code{OdeModelMCMC$print()}}
\item \href{#method-OdeModelMCMC-cmdstan_init}{\code{OdeModelMCMC$cmdstan_init()}}
\item \href{#method-OdeModelMCMC-gqs}{\code{OdeModelMCMC$gqs()}}
\item \href{#method-OdeModelMCMC-reliability}{\code{OdeModelMCMC$reliability()}}
\item \href{#method-OdeModelMCMC-clone}{\code{OdeModelMCMC$clone()}}
}
}
\if{html}{\out{
<details><summary>Inherited methods</summary>
<ul>
<li><span class="pkg-link" data-pkg="odemodeling" data-topic="OdeModelFit" data-id="cmdstan_seed"><a href='../../odemodeling/html/OdeModelFit.html#method-OdeModelFit-cmdstan_seed'><code>odemodeling::OdeModelFit$cmdstan_seed()</code></a></span></li>
<li><span class="pkg-link" data-pkg="odemodeling" data-topic="OdeModelFit" data-id="cmdstan_version"><a href='../../odemodeling/html/OdeModelFit.html#method-OdeModelFit-cmdstan_version'><code>odemodeling::OdeModelFit$cmdstan_version()</code></a></span></li>
<li><span class="pkg-link" data-pkg="odemodeling" data-topic="OdeModelFit" data-id="dim"><a href='../../odemodeling/html/OdeModelFit.html#method-OdeModelFit-dim'><code>odemodeling::OdeModelFit$dim()</code></a></span></li>
<li><span class="pkg-link" data-pkg="odemodeling" data-topic="OdeModelFit" data-id="dim_odesol"><a href='../../odemodeling/html/OdeModelFit.html#method-OdeModelFit-dim_odesol'><code>odemodeling::OdeModelFit$dim_odesol()</code></a></span></li>
<li><span class="pkg-link" data-pkg="odemodeling" data-topic="OdeModelFit" data-id="draws"><a href='../../odemodeling/html/OdeModelFit.html#method-OdeModelFit-draws'><code>odemodeling::OdeModelFit$draws()</code></a></span></li>
<li><span class="pkg-link" data-pkg="odemodeling" data-topic="OdeModelFit" data-id="extract_odesol"><a href='../../odemodeling/html/OdeModelFit.html#method-OdeModelFit-extract_odesol'><code>odemodeling::OdeModelFit$extract_odesol()</code></a></span></li>
<li><span class="pkg-link" data-pkg="odemodeling" data-topic="OdeModelFit" data-id="extract_odesol_df"><a href='../../odemodeling/html/OdeModelFit.html#method-OdeModelFit-extract_odesol_df'><code>odemodeling::OdeModelFit$extract_odesol_df()</code></a></span></li>
<li><span class="pkg-link" data-pkg="odemodeling" data-topic="OdeModelFit" data-id="extract_odesol_df_dist"><a href='../../odemodeling/html/OdeModelFit.html#method-OdeModelFit-extract_odesol_df_dist'><code>odemodeling::OdeModelFit$extract_odesol_df_dist()</code></a></span></li>
<li><span class="pkg-link" data-pkg="odemodeling" data-topic="OdeModelFit" data-id="extract_odesol_quantile"><a href='../../odemodeling/html/OdeModelFit.html#method-OdeModelFit-extract_odesol_quantile'><code>odemodeling::OdeModelFit$extract_odesol_quantile()</code></a></span></li>
<li><span class="pkg-link" data-pkg="odemodeling" data-topic="OdeModelFit" data-id="extract_unflattened"><a href='../../odemodeling/html/OdeModelFit.html#method-OdeModelFit-extract_unflattened'><code>odemodeling::OdeModelFit$extract_unflattened()</code></a></span></li>
<li><span class="pkg-link" data-pkg="odemodeling" data-topic="OdeModelFit" data-id="extract_y0"><a href='../../odemodeling/html/OdeModelFit.html#method-OdeModelFit-extract_y0'><code>odemodeling::OdeModelFit$extract_y0()</code></a></span></li>
<li><span class="pkg-link" data-pkg="odemodeling" data-topic="OdeModelFit" data-id="get_t"><a href='../../odemodeling/html/OdeModelFit.html#method-OdeModelFit-get_t'><code>odemodeling::OdeModelFit$get_t()</code></a></span></li>
<li><span class="pkg-link" data-pkg="odemodeling" data-topic="OdeModelFit" data-id="get_t0"><a href='../../odemodeling/html/OdeModelFit.html#method-OdeModelFit-get_t0'><code>odemodeling::OdeModelFit$get_t0()</code></a></span></li>
<li><span class="pkg-link" data-pkg="odemodeling" data-topic="OdeModelFit" data-id="info"><a href='../../odemodeling/html/OdeModelFit.html#method-OdeModelFit-info'><code>odemodeling::OdeModelFit$info()</code></a></span></li>
<li><span class="pkg-link" data-pkg="odemodeling" data-topic="OdeModelFit" data-id="loglik"><a href='../../odemodeling/html/OdeModelFit.html#method-OdeModelFit-loglik'><code>odemodeling::OdeModelFit$loglik()</code></a></span></li>
<li><span class="pkg-link" data-pkg="odemodeling" data-topic="OdeModelFit" data-id="nchains"><a href='../../odemodeling/html/OdeModelFit.html#method-OdeModelFit-nchains'><code>odemodeling::OdeModelFit$nchains()</code></a></span></li>
<li><span class="pkg-link" data-pkg="odemodeling" data-topic="OdeModelFit" data-id="ndraws"><a href='../../odemodeling/html/OdeModelFit.html#method-OdeModelFit-ndraws'><code>odemodeling::OdeModelFit$ndraws()</code></a></span></li>
<li><span class="pkg-link" data-pkg="odemodeling" data-topic="OdeModelFit" data-id="niterations"><a href='../../odemodeling/html/OdeModelFit.html#method-OdeModelFit-niterations'><code>odemodeling::OdeModelFit$niterations()</code></a></span></li>
<li><span class="pkg-link" data-pkg="odemodeling" data-topic="OdeModelFit" data-id="plot_odesol"><a href='../../odemodeling/html/OdeModelFit.html#method-OdeModelFit-plot_odesol'><code>odemodeling::OdeModelFit$plot_odesol()</code></a></span></li>
<li><span class="pkg-link" data-pkg="odemodeling" data-topic="OdeModelFit" data-id="plot_odesol_dist"><a href='../../odemodeling/html/OdeModelFit.html#method-OdeModelFit-plot_odesol_dist'><code>odemodeling::OdeModelFit$plot_odesol_dist()</code></a></span></li>
<li><span class="pkg-link" data-pkg="odemodeling" data-topic="OdeModelFit" data-id="summary"><a href='../../odemodeling/html/OdeModelFit.html#method-OdeModelFit-summary'><code>odemodeling::OdeModelFit$summary()</code></a></span></li>
<li><span class="pkg-link" data-pkg="odemodeling" data-topic="OdeModelFit" data-id="time"><a href='../../odemodeling/html/OdeModelFit.html#method-OdeModelFit-time'><code>odemodeling::OdeModelFit$time()</code></a></span></li>
</ul>
</details>
}}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-OdeModelMCMC-print_diagnostics"></a>}}
\if{latex}{\out{\hypertarget{method-OdeModelMCMC-print_diagnostics}{}}}
\subsection{Method \code{print_diagnostics()}}{
Print the 'stdout' of 'CmdStan' diagnostics.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{OdeModelMCMC$print_diagnostics()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-OdeModelMCMC-print_summary"></a>}}
\if{latex}{\out{\hypertarget{method-OdeModelMCMC-print_summary}{}}}
\subsection{Method \code{print_summary()}}{
Print the 'stdout' of 'CmdStan' summary.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{OdeModelMCMC$print_summary()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-OdeModelMCMC-new"></a>}}
\if{latex}{\out{\hypertarget{method-OdeModelMCMC-new}{}}}
\subsection{Method \code{new()}}{
Create an \link{OdeModelMCMC} object.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{OdeModelMCMC$new(
  model,
  t0,
  t,
  solver,
  data,
  cmdstanr_fit,
  cmdstan_diagnostics,
  cmdstan_summary
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{model}}{An object of class \link{OdeModel} (will be deepcopied).}

\item{\code{t0}}{Used initial time.}

\item{\code{t}}{Used time points.}

\item{\code{solver}}{Used solver. An object of class \link{OdeSolver}.}

\item{\code{data}}{Given additional data.}

\item{\code{cmdstanr_fit}}{A \link[cmdstanr:CmdStanMCMC]{cmdstanr::CmdStanMCMC} object.}

\item{\code{cmdstan_diagnostics}}{Output of the \code{diagnose} program of 'CmdStan'.}

\item{\code{cmdstan_summary}}{Output of the \code{stansummary} program of 'CmdStan'.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-OdeModelMCMC-print"></a>}}
\if{latex}{\out{\hypertarget{method-OdeModelMCMC-print}{}}}
\subsection{Method \code{print()}}{
Print information about the object.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{OdeModelMCMC$print()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-OdeModelMCMC-cmdstan_init"></a>}}
\if{latex}{\out{\hypertarget{method-OdeModelMCMC-cmdstan_init}{}}}
\subsection{Method \code{cmdstan_init()}}{
Get used 'CmdStan' init argument.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{OdeModelMCMC$cmdstan_init()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-OdeModelMCMC-gqs"></a>}}
\if{latex}{\out{\hypertarget{method-OdeModelMCMC-gqs}{}}}
\subsection{Method \code{gqs()}}{
Simulate ODE solutions (and other possible generated quantities
using) the model and fitted params. This If any
of the arguments are \code{NULL} (default), they are replaced with ones saved
in the \link{OdeModelFit} object.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{OdeModelMCMC$gqs(
  t0 = NULL,
  t = NULL,
  data = NULL,
  solver = NULL,
  fitted_params = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{t0}}{Initial time.}

\item{\code{t}}{Vector of time points.}

\item{\code{data}}{Additional data.}

\item{\code{solver}}{ODE solver.}

\item{\code{fitted_params}}{Will be passed as the \code{fitted_params} argument
to the \verb{$generate_quantities()} method of the underlying
\link[cmdstanr:CmdStanModel]{cmdstanr::CmdStanModel} object. If this is \code{NULL} (default),
parameter draws of the \link{OdeModelFit} object are used.}

\item{\code{...}}{Arguments passed to the \verb{$generate_quantities()} method of
the underlying \link[cmdstanr:CmdStanModel]{cmdstanr::CmdStanModel} object.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
An object of class \link{OdeModelGQ}.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-OdeModelMCMC-reliability"></a>}}
\if{latex}{\out{\hypertarget{method-OdeModelMCMC-reliability}{}}}
\subsection{Method \code{reliability()}}{
Study reliability of results by running standalone generated
quantities using more accurate ODE solver configurations.
See \emph{Timonen, J. et al. (2022)} for description of the method.
Currently it is the user's responsibility to ensure that \code{solvers}
is a list of increasingly accurate solvers.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{OdeModelMCMC$reliability(
  solvers,
  savedir = "results",
  basename = "odegq",
  recompute_loglik = TRUE,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{solvers}}{List of ODE solvers (should be the same solver as used
during MCMC, but with increasingly more accurate configurations).
See \code{\link{odesolvers_lists}} for creating this.}

\item{\code{savedir}}{Directory where results are saved. \emph{NOTE:} it might
be difficult to load the results if you move them to a different place
afterwards, because the file paths get saved in the output. Improving
the file handling should be a future improvement.}

\item{\code{basename}}{Base name for saved files.}

\item{\code{recompute_loglik}}{Should the log-likelihoods corresponding to
solver configuration used during MCMC be recomputed?}

\item{\code{...}}{Additional arguments passed to the \verb{$generate_quantities()}
method of the underlying \link[cmdstanr:CmdStanModel]{cmdstanr::CmdStanModel} object.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A named list.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-OdeModelMCMC-clone"></a>}}
\if{latex}{\out{\hypertarget{method-OdeModelMCMC-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{OdeModelMCMC$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
