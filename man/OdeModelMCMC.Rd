% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/classes-fit.R
\name{OdeModelMCMC}
\alias{OdeModelMCMC}
\title{An ODE model MCMC fit (R6 class)}
\description{
Used for holding the output of the \verb{$sample()} method  of the
\link{OdeModel} class.
}
\seealso{
Other Model fit classes.: 
\code{\link{OdeModelFit}},
\code{\link{OdeModelGQ}}
}
\concept{Model fit classes.}
\section{Super class}{
\code{\link[odemodeling:OdeModelFit]{odemodeling::OdeModelFit}} -> \code{OdeModelMCMC}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-print}{\code{OdeModelMCMC$print()}}
\item \href{#method-cmdstan_seed}{\code{OdeModelMCMC$cmdstan_seed()}}
\item \href{#method-cmdstan_init}{\code{OdeModelMCMC$cmdstan_init()}}
\item \href{#method-simulate}{\code{OdeModelMCMC$simulate()}}
\item \href{#method-clone}{\code{OdeModelMCMC$clone()}}
}
}
\if{html}{
\out{<details ><summary>Inherited methods</summary>}
\itemize{
\item \out{<span class="pkg-link" data-pkg="odemodeling" data-topic="OdeModelFit" data-id="cmdstan_version">}\href{../../odemodeling/html/OdeModelFit.html#method-cmdstan_version}{\code{odemodeling::OdeModelFit$cmdstan_version()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="odemodeling" data-topic="OdeModelFit" data-id="dim">}\href{../../odemodeling/html/OdeModelFit.html#method-dim}{\code{odemodeling::OdeModelFit$dim()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="odemodeling" data-topic="OdeModelFit" data-id="dim_odesol">}\href{../../odemodeling/html/OdeModelFit.html#method-dim_odesol}{\code{odemodeling::OdeModelFit$dim_odesol()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="odemodeling" data-topic="OdeModelFit" data-id="draws">}\href{../../odemodeling/html/OdeModelFit.html#method-draws}{\code{odemodeling::OdeModelFit$draws()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="odemodeling" data-topic="OdeModelFit" data-id="draws_size">}\href{../../odemodeling/html/OdeModelFit.html#method-draws_size}{\code{odemodeling::OdeModelFit$draws_size()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="odemodeling" data-topic="OdeModelFit" data-id="extract_odesol">}\href{../../odemodeling/html/OdeModelFit.html#method-extract_odesol}{\code{odemodeling::OdeModelFit$extract_odesol()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="odemodeling" data-topic="OdeModelFit" data-id="extract_odesol_df">}\href{../../odemodeling/html/OdeModelFit.html#method-extract_odesol_df}{\code{odemodeling::OdeModelFit$extract_odesol_df()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="odemodeling" data-topic="OdeModelFit" data-id="extract_unflattened">}\href{../../odemodeling/html/OdeModelFit.html#method-extract_unflattened}{\code{odemodeling::OdeModelFit$extract_unflattened()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="odemodeling" data-topic="OdeModelFit" data-id="get_t">}\href{../../odemodeling/html/OdeModelFit.html#method-get_t}{\code{odemodeling::OdeModelFit$get_t()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="odemodeling" data-topic="OdeModelFit" data-id="get_t0">}\href{../../odemodeling/html/OdeModelFit.html#method-get_t0}{\code{odemodeling::OdeModelFit$get_t0()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="odemodeling" data-topic="OdeModelFit" data-id="info">}\href{../../odemodeling/html/OdeModelFit.html#method-info}{\code{odemodeling::OdeModelFit$info()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="odemodeling" data-topic="OdeModelFit" data-id="initialize">}\href{../../odemodeling/html/OdeModelFit.html#method-initialize}{\code{odemodeling::OdeModelFit$initialize()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="odemodeling" data-topic="OdeModelFit" data-id="nchains">}\href{../../odemodeling/html/OdeModelFit.html#method-nchains}{\code{odemodeling::OdeModelFit$nchains()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="odemodeling" data-topic="OdeModelFit" data-id="ndraws">}\href{../../odemodeling/html/OdeModelFit.html#method-ndraws}{\code{odemodeling::OdeModelFit$ndraws()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="odemodeling" data-topic="OdeModelFit" data-id="niterations">}\href{../../odemodeling/html/OdeModelFit.html#method-niterations}{\code{odemodeling::OdeModelFit$niterations()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="odemodeling" data-topic="OdeModelFit" data-id="plot_odesol">}\href{../../odemodeling/html/OdeModelFit.html#method-plot_odesol}{\code{odemodeling::OdeModelFit$plot_odesol()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="odemodeling" data-topic="OdeModelFit" data-id="summary">}\href{../../odemodeling/html/OdeModelFit.html#method-summary}{\code{odemodeling::OdeModelFit$summary()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="odemodeling" data-topic="OdeModelFit" data-id="time">}\href{../../odemodeling/html/OdeModelFit.html#method-time}{\code{odemodeling::OdeModelFit$time()}}\out{</span>}
}
\out{</details>}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-print"></a>}}
\if{latex}{\out{\hypertarget{method-print}{}}}
\subsection{Method \code{print()}}{
Print information about the fit
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{OdeModelMCMC$print()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-cmdstan_seed"></a>}}
\if{latex}{\out{\hypertarget{method-cmdstan_seed}{}}}
\subsection{Method \code{cmdstan_seed()}}{
Get used 'CmdStan' rng seed.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{OdeModelMCMC$cmdstan_seed()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-cmdstan_init"></a>}}
\if{latex}{\out{\hypertarget{method-cmdstan_init}{}}}
\subsection{Method \code{cmdstan_init()}}{
Get used 'CmdStan' init argument.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{OdeModelMCMC$cmdstan_init()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-simulate"></a>}}
\if{latex}{\out{\hypertarget{method-simulate}{}}}
\subsection{Method \code{simulate()}}{
Simulate ODE solutions (and other possible generated quantities
using) the model and fitted params. If any
of the arguments are \code{NULL} (default), they are replaced with ones saved
in the \link{OdeModelMCMC} object.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{OdeModelMCMC$simulate(
  t0 = NULL,
  t = NULL,
  data = NULL,
  solver = NULL,
  fitted_params = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{t0}}{Initial time.}

\item{\code{t}}{Vector of time points.}

\item{\code{data}}{Additional data.}

\item{\code{solver}}{ODE solver.}

\item{\code{fitted_params}}{Equal to the \code{fitted_params} argument  of the
\verb{$generate_quantities()} method of the underlying
\link[cmdstanr:CmdStanModel]{cmdstanr::CmdStanModel} object. If this is \code{NULL} (default),
parameter draws of the \link{OdeModelFit} object are used.}

\item{\code{...}}{Arguments passed to the \verb{$generate_quantities()} method of the
underlying \link[cmdstanr:CmdStanModel]{cmdstanr::CmdStanModel} object.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
An object of class \link{OdeModelGQ}.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-clone"></a>}}
\if{latex}{\out{\hypertarget{method-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{OdeModelMCMC$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
