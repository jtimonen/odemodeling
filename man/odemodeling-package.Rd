% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/odemodeling-package.R
\docType{package}
\name{odemodeling-package}
\alias{odemodeling-package}
\alias{odemodeling}
\title{The 'odemodeling' package}
\description{
Building and fitting ordinary differential equation (ODE)
models with different numerical solvers in 'Stan'. Designed for efficient
validation of the accuracy of numerical solvers in the Bayesian context.
Using Pareto-smoothed importance sampling (PSIS) and its diagnostics.
The package is based on the \code{R6} object oriented system and uses
\code{cmdstanr} as the interface to 'Stan'.
}
\section{Creating a model}{

\itemize{
\item Declare model data, parameters, and other variables using
\code{\link[=stan_array]{stan_array()}}, \code{\link[=stan_dim]{stan_dim()}}, \code{\link[=stan_matrix]{stan_matrix()}}, \code{\link[=stan_param]{stan_param()}},
\code{\link[=stan_transform]{stan_transform()}}, \code{\link[=stan_vector_array]{stan_vector_array()}}, and \code{\link[=stan_vector]{stan_vector()}}.
\item Create an \link{OdeModel} model using \code{\link[=ode_model]{ode_model()}}.
}
}

\section{Using different ODE solvers}{

\itemize{
\item See \code{\link{odesolvers}} for constructors that create objects
of class \link{OdeSolver}.
}
}

\section{Fitting a model}{

\itemize{
\item Sample the posterior or prior distribution of the model parameters,
and generate corresponding ODE solutions using the \verb{$sample()} method
of the \link{OdeModel} class.
\item See methods of the \link{OdeModelMCMC} class for studying the returned
object.
}
}

\section{Additional simulation of ODE systems}{

\itemize{
\item See the \verb{$gqs()} method of the \link{OdeModelMCMC} and \link{OdeModel}
classes.
\item See methods of the \link{OdeModelGQ} class for studying the returned
object.
\item See \code{\link{compare_odefits}} for functions to compare
different ODE model simulations and fits.
}
}

\section{Importance sampling for reliable and efficient inference in Bayesian ODE models}{

Our proposed workflow is to
\enumerate{
\item Select an initial ODE solver M.
\item Sample the parameter posterior using MCMC with M as the ODE solver.
\item  Compute certain metrics using a more accurate solver M∗.
\item Increase the accuracy of M∗ and repeat Step 3 until the metrics converge.
If the Pareto-k metric converges to a value larger than 0.7, increase the accuracy
of M and go back to Step 2.
\item Compute any posterior estimates using final importance weights. See
Timonen et al. (2022) below.
}
The algorithm can be used to validate the reliability, and correct the errors
of a given method M, which can be for example a software default. On the other hand,
a smart initial selection of M can provide speed gains
compared to often rather conservatively set software defaults, while still maintaining
reliability of the inferences.

We generally recommend selecting M initially so that sampling is as fast as possible.
For example, for non-adaptive ODE solvers, one can ﬁrst try using the smallest
sensible number of steps that does not result in immediate failure.
Selecting a good M is more diﬃcult in the case of adaptive solvers.
We have
observed that tolerances on the order of 1e-4 to 1e-3 generally work well.

See the \code{reliability()} method of the \code{\link{OdeModelMCMC}} class.
}

\section{Tutorial}{

See the tutorial vignette.
}

\references{
\enumerate{
\item Timonen, J., Siccha, N., Bales, B., Lähdesmäki, H., & Vehtari, A.
(2023). An importance sampling approach for reliable and efficient
inference in Bayesian ordinary differential equation models.
Stat, 12(1), e614.
\url{https://onlinelibrary.wiley.com/doi/full/10.1002/sta4.614}
}
}
\author{
\strong{Maintainer}: Juho Timonen \email{juho.timonen@iki.fi} (\href{https://orcid.org/0000-0003-2341-6765}{ORCID})

}
